library(tidyverse)
library(conflicted)
library(datasauRus)
library(dplyr)
library("ggplot2")
datasaurus_dozen %>%
group_by(dataset) %>%
summarise(
mean_x=mean(x),
mean_y=mean(y),
std_dev_x=sd(x),
std_dev_y=sd(y),
corr_x_y=cor(x,y)
)
library("ggplot2")
ggplot(datasaurus_dozen, aes(x = x, y = y, colour = dataset))+
geom_point() +
theme_void() +
theme(legend.position = "none")+
facet_wrap(~dataset, ncol = 3)
dfgrupo <- datasaurus_dozen %>%
dplyr::filter(dataset == "h_lines")
dfgrupo
library(ggplot2)
library(dplyr)
# Usar la preferencia de dplyr::filter()
conflicts_prefer(dplyr::filter)
# Filtrar solo el dataset "h_lines"
ggplot(datasaurus_dozen %>% dplyr::filter(dataset == "h_lines"), aes(x = x, y = y)) +
geom_point(aes(colour = dataset)) +  # Puntos coloreados según dataset
geom_smooth(method = "lm", color = "blue") +  # Línea de regresión lineal
scale_color_manual(values = c("h_lines" = "red")) +  # Mantener el color rojo para "h_lines"
theme_minimal() +  # Tema simple
labs(title = "Regresión Lineal para h_lines", x = "X", y = "Y")  # Etiquetas
